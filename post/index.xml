<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Daniel Moreira</title>
    <link>https://danielmoreira.github.io/post/</link>
      <atom:link href="https://danielmoreira.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Wed, 07 Dec 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://danielmoreira.github.io/media/sharing.jpg</url>
      <title>Posts</title>
      <link>https://danielmoreira.github.io/post/</link>
    </image>
    
    <item>
      <title>COMP 141, Homework</title>
      <link>https://danielmoreira.github.io/post/comp141/</link>
      <pubDate>Wed, 07 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://danielmoreira.github.io/post/comp141/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Dear COMP 141 Students,&lt;/p&gt;
&lt;p&gt;Please find below some tips to answer Homework #7.
I acknowledge this is a more challenging assignment,
in particular given the course&amp;rsquo;s asynchronous and fully remote nature.
Because of this, I&amp;rsquo;d like to give you some hints that might be useful to answer it.&lt;/p&gt;
&lt;p&gt;May you have any questions, please let me know.&lt;br&gt;
&amp;ndash; Daniel (&lt;a href=&#34;mailto:dmoreira1@luc.edu&#34;&gt;dmoreira1@luc.edu&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;question-1&#34;&gt;Question 1&lt;/h2&gt;
&lt;p&gt;The steps below will give you some structure to answer this question.&lt;/p&gt;
&lt;h3 id=&#34;11-create-a-username-on-github&#34;&gt;1.1. Create a username on GitHub.&lt;/h3&gt;
&lt;p&gt;You can do this at &lt;a href=&#34;https://github.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com&lt;/a&gt;, using the &amp;ldquo;Sign Up&amp;rdquo; button in the top right corner
of the page.
Follow the steps and provide a screenshot with your new GitHub profile.
This will be your screenshot number one.&lt;/p&gt;
&lt;p&gt;Mine is below, for your reference.
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/comp141/f1_hu35fb43e64cbb18d57e943d37f0b21ab4_251672_135826c5eb7f71df4779ea2d1305420d.webp 400w,
               /post/comp141/f1_hu35fb43e64cbb18d57e943d37f0b21ab4_251672_3f2d22d8ec9b48f5ddc1d02a64061f22.webp 760w,
               /post/comp141/f1_hu35fb43e64cbb18d57e943d37f0b21ab4_251672_1200x1200_fit_q90_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://danielmoreira.github.io/post/comp141/f1_hu35fb43e64cbb18d57e943d37f0b21ab4_251672_135826c5eb7f71df4779ea2d1305420d.webp&#34;
               width=&#34;600px&#34;
               height=&#34;403&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;12-create-a-project-on-github&#34;&gt;1.2. Create a project on GitHub.&lt;/h3&gt;
&lt;p&gt;This can be done through the GitHub web interface, from your GitHub profile page
that you&amp;rsquo;ve just used to generate a screenshot.
In the top right corner of your profile page, there is button with a plus sign.
Click there and select the &amp;ldquo;New repository&amp;rdquo; option.&lt;/p&gt;
&lt;p&gt;In the following page, provide a &amp;ldquo;Repository name&amp;rdquo;, and mark it as &amp;ldquo;Public&amp;rdquo; (so that everybody,
including the TA and me, can access it).
Don&amp;rsquo;t forget to select the &amp;ldquo;Add a README file&amp;rdquo; option, so your project is not empty.
You may also provide a project &amp;ldquo;Description&amp;rdquo;, if you want.
This will be useful once you get to the point where you have lots of projects.
A possible description is &amp;ldquo;My first GitHub project for Comp 141.&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;After doing this, go to the bottom of the page, and click on the &amp;ldquo;Create repository&amp;rdquo; button.
Voilà, you now have your new project on GitHub, on the web.
Provide a screenshot of the current project page; this will be you screenshot number two.&lt;/p&gt;
&lt;h3 id=&#34;13-clone-the-project-from-github-on-the-web-to-your-local-computer&#34;&gt;1.3. Clone the project from GitHub (on the web) to your local computer.&lt;/h3&gt;
&lt;p&gt;On your computer, open the terminal screen.
Make sure you have git installed:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@host: git --version
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you don&amp;rsquo;t, install it with either apt-get or homebrew, depending on your OS.
For Linux users (your COMP 141 Virtual Machine is Linux):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@host: sudo apt install git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For macOS users:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@host% brew install git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Clone the project from GitHub to your local machine.
Go to your project GitHub page (the one you&amp;rsquo;ve just used to generate the last screenshot),
and click on the &amp;ldquo;&amp;lt;&amp;gt; Code&amp;rdquo; button on the top mid-right portion of the screen.
Select the &amp;ldquo;HTTPS&amp;rdquo; option on the &amp;ldquo;Clone&amp;rdquo; function and copy the
&amp;ldquo;&lt;code&gt;https://gtihub.com/&amp;lt;your_name&amp;gt;/&amp;lt;your_project&amp;gt;&lt;/code&gt;&amp;rdquo; link.&lt;/p&gt;
&lt;p&gt;Go back to the terminal and type:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@host: git clone https://gtihub.com/&amp;lt;your_name&amp;gt;/&amp;lt;your_project&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Don&amp;rsquo;t forget to paste and replace &amp;ldquo;&lt;code&gt;https://gtihub.com/&amp;lt;your_name&amp;gt;/&amp;lt;your_project&amp;gt;&lt;/code&gt;&amp;rdquo;
with the content you&amp;rsquo;ve just copied from your GitHub project page.&lt;/p&gt;
&lt;p&gt;Voilà, your project was copied to your local computer.
Execute the &amp;ldquo;ls&amp;rdquo; command on your terminal and localize your project folder;
the folder&amp;rsquo;s name will be the same as your project&amp;rsquo;s.
Generate a screenshot of your terminal with this content and add to your answers;
this will be your screenshot number three.&lt;/p&gt;
&lt;h3 id=&#34;14-setup-an-authentication-token-so-you-can-upload-things-to-your-github-project&#34;&gt;1.4. Setup an authentication token, so you can upload things to your GitHub project.&lt;/h3&gt;
&lt;p&gt;This is a step with security purposes, to avoid people inadvertently messing up with your project.
Go to your GitHub profile page (the one you&amp;rsquo;ve used to generate the first screenshot).
Click on your profile picture in the top right corner of the page.
Select the &amp;ldquo;Settings&amp;rdquo; option on the drop-down menu.&lt;/p&gt;
&lt;p&gt;On the following page, on the left-side menu, select the &amp;ldquo;Developer settings&amp;rdquo; option
(yes, you&amp;rsquo;ll be a developer).
On the following one, select the &amp;ldquo;Personal access tokens&amp;rdquo; drop-down option.
We want the &amp;ldquo;Tokens (classic)&amp;rdquo; feature.
Click on it and proceed to the next page.&lt;/p&gt;
&lt;p&gt;On the next page, select the top right corner &amp;ldquo;Generate new token&amp;rdquo; button.
Again, select the &amp;ldquo;Generate new token (classic)&amp;rdquo; option.
Provide your GitHub password, to proceed to the next step.&lt;/p&gt;
&lt;p&gt;Fill-in the blanks of the form within the next page.
For instance, in the &amp;ldquo;Note&amp;rdquo; field, add something like &amp;ldquo;My first token for test purposes.&amp;rdquo;
For the &amp;ldquo;Expiration&amp;rdquo; field, select &amp;ldquo;No expiration&amp;rdquo; and ignore, for now, the warning message
(we can talk about it in more detail through e-mail, if you want to).
In the available &amp;ldquo;scopes&amp;rdquo;, select the &amp;ldquo;repo&amp;rdquo; one.
Go to the bottom of the page and click on the &amp;ldquo;Generate token&amp;rdquo; button.&lt;/p&gt;
&lt;p&gt;Voilà, your created a GitHub security token.
Take a screenshot of the next page and add to your answers; this will be your screenshot number four.&lt;/p&gt;
&lt;p&gt;Don&amp;rsquo;t forget to copy the long string that is provided in this page.
This will be your password to upload local modifications to your GitHub project.
We&amp;rsquo;ll need it in the next step.&lt;/p&gt;
&lt;h3 id=&#34;15-add-a-new-file-to-your-project&#34;&gt;1.5. Add a new file to your project.&lt;/h3&gt;
&lt;p&gt;Back to your local machine, using your terminal, create a new file on your project&amp;rsquo;s folder.
Make sure (with &amp;ldquo;pwd&amp;rdquo;, &amp;ldquo;cd&amp;rdquo;, and &amp;ldquo;ls&amp;rdquo;) that you&amp;rsquo;re inside the correct folder.
You may use any file editor of your preference.
In the example below, I&amp;rsquo;m using &amp;ldquo;vi&amp;rdquo; to edit files.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@host: cd &amp;lt;your_project&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@host: vi my_file.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Don&amp;rsquo;t forget to replace &amp;ldquo;&amp;lt;your_project&amp;gt;&amp;rdquo; with your project&amp;rsquo;s folder.&lt;/p&gt;
&lt;p&gt;Type some content to &amp;ldquo;my_file.txt&amp;rdquo; and save it.
In the real world, you&amp;rsquo;ll be doing this over a program source code, adding lines of
commands and program configurations.
Save the file and quit the file editor.&lt;/p&gt;
&lt;p&gt;Now it&amp;rsquo;s time to &amp;ldquo;upload&amp;rdquo; the local file to your project on Git.
In your local terminal, inside the folder of your project, execute the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@host: git add my_file.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This command is telling the GitHub application that you want to include the file
you&amp;rsquo;ve just created to your project.
After doing this, &amp;ldquo;commit&amp;rdquo; the added file to a new version of your project:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@host: git commit my_file.txt -m &amp;#34;Adding my_file.txt to the project.&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Observe that the message given to &amp;ldquo;-m&amp;rdquo; can be any string and should be descriptive of
what you&amp;rsquo;re doing with your project.&lt;/p&gt;
&lt;p&gt;Now comes the time to upload the new project version (with the local modifications).
You can do it by using the &amp;ldquo;git push&amp;rdquo; command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@host: git push origin main
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This command will request your GitHub username (the same you used in your profile), and a password.
Provide the long string generated in the previous step as the password.
If successful, this command will upload &amp;ldquo;my_file.txt&amp;rdquo; to the GitHub project web page, in the &amp;ldquo;main&amp;rdquo;
branch of your project.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Other branches are possible (for different versions of the program being developed), but this is
something you&amp;rsquo;ll learn in your future as a developer.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Go to your GitHub project page (the one that you&amp;rsquo;ve used to generate the second screenshot)
and verify that &amp;ldquo;my_file.txt&amp;rdquo; is available there, together with the &amp;ldquo;README.md&amp;rdquo; file.
Take a screenshot of this status and add to your answers; this will be your screenshot number five.&lt;/p&gt;
&lt;h3 id=&#34;16-watch-the-content-of-httpswwwyoutubecomwatchv0fkg7e37bqe&#34;&gt;1.6. Watch the content of &lt;a href=&#34;https://www.youtube.com/watch?v=0fKg7e37bQE&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.youtube.com/watch?v=0fKg7e37bQE&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Watch the content of the GitHub tutorial and try to make a parallel with the steps above.
May you have any questions about the video and the steps, please let me know.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GitHub is an amazing tool that you must use in your coding career.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;question-2&#34;&gt;Question 2&lt;/h2&gt;
&lt;p&gt;The steps below will give you some structure to answer this question.&lt;/p&gt;
&lt;h3 id=&#34;21-create-a-json-file-using-your-local-terminal&#34;&gt;2.1. Create a JSON file using your local terminal.&lt;/h3&gt;
&lt;p&gt;JSON files are text files in &amp;ldquo;JavaScript Object Notation&amp;rdquo; (&lt;a href=&#34;https://www.json.org/json-en.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;JSON&lt;/a&gt;)
whose content is structured in a more human-readable format.
JSON files aim at storing data about the elements of a problem domain, whose reading is easy to people.
In the example below, downloaded from this &lt;a href=&#34;https://drive.google.com/file/d/1TVf-Von3auR2B3WPy585SoCb8WEM4auU/view&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;link&lt;/a&gt;,
we have data about cats that might be useful for a veterinary app.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;breed&amp;#34;: &amp;#34;Abyssinian&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;country&amp;#34;: &amp;#34;Ethiopia&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;origin&amp;#34;: &amp;#34;Natural\/Standard&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;coat&amp;#34;: &amp;#34;Short&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;pattern&amp;#34;: &amp;#34;Ticked&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;breed&amp;#34;: &amp;#34;Aegean&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;country&amp;#34;: &amp;#34;Greece&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;origin&amp;#34;: &amp;#34;Natural\/Standard&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;coat&amp;#34;: &amp;#34;Semi-long&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;pattern&amp;#34;: &amp;#34;Bi- or tri-colored&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;breed&amp;#34;: &amp;#34;American Curl&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;country&amp;#34;: &amp;#34;United States&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;origin&amp;#34;: &amp;#34;Mutation&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;coat&amp;#34;: &amp;#34;Short\/Long&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;pattern&amp;#34;: &amp;#34;All&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;breed&amp;#34;: &amp;#34;American Bobtail&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;country&amp;#34;: &amp;#34;United States&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;origin&amp;#34;: &amp;#34;Mutation&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;coat&amp;#34;: &amp;#34;Short\/Long&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;pattern&amp;#34;: &amp;#34;All&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;breed&amp;#34;: &amp;#34;American Shorthair&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;country&amp;#34;: &amp;#34;United States&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;origin&amp;#34;: &amp;#34;Natural&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;coat&amp;#34;: &amp;#34;Short&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;pattern&amp;#34;: &amp;#34;All but colorpoint&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;breed&amp;#34;: &amp;#34;American Wirehair&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;country&amp;#34;: &amp;#34;United States&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;origin&amp;#34;: &amp;#34;Mutation&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;coat&amp;#34;: &amp;#34;Rex&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;pattern&amp;#34;: &amp;#34;All but colorpoint&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;breed&amp;#34;: &amp;#34;Arabian Mau&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;country&amp;#34;: &amp;#34;Arabian Peninsula&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;origin&amp;#34;: &amp;#34;Natural&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;coat&amp;#34;: &amp;#34;Short&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;pattern&amp;#34;: &amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;breed&amp;#34;: &amp;#34;Australian Mist&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;country&amp;#34;: &amp;#34;Australia&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;origin&amp;#34;: &amp;#34;Crossbreed&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;coat&amp;#34;: &amp;#34;Short&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;pattern&amp;#34;: &amp;#34;Spotted and Classic tabby&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;breed&amp;#34;: &amp;#34;Asian&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;country&amp;#34;: &amp;#34;developed in the United Kingdom (founding stock from Asia)&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;origin&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;coat&amp;#34;: &amp;#34;Short&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;pattern&amp;#34;: &amp;#34;Evenly solid&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;breed&amp;#34;: &amp;#34;Asian Semi-longhair&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;country&amp;#34;: &amp;#34;United Kingdom&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;origin&amp;#34;: &amp;#34;Crossbreed&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;coat&amp;#34;: &amp;#34;Semi-long&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;pattern&amp;#34;: &amp;#34;Solid&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As you might observe, this file depicts a list with 10 cats.
Each cat has information about its &amp;ldquo;breed&amp;rdquo;, &amp;ldquo;country&amp;rdquo;, &amp;ldquo;origin&amp;rdquo;, &amp;ldquo;coat&amp;rdquo;, and fur &amp;ldquo;pattern&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;The objective of this and of the following questions is to write shellscripts that read this type of file.
To answer question 2, start by opening your local terminal and creating a file named &amp;ldquo;catfacts.json&amp;rdquo;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@host: vi catfacts.json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here is my screen with &amp;ldquo;vi&amp;rdquo; open and the creation of &amp;ldquo;catfacts.json&amp;rdquo;.
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/comp141/f2_hu1c0b472ad7601c0ecbac2cb20f5ca62f_95942_9e17139c8b96e7d7978cd66ccf3b6ae2.webp 400w,
               /post/comp141/f2_hu1c0b472ad7601c0ecbac2cb20f5ca62f_95942_64b2cd74041e530aa5beb1f7f06dab90.webp 760w,
               /post/comp141/f2_hu1c0b472ad7601c0ecbac2cb20f5ca62f_95942_1200x1200_fit_q90_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://danielmoreira.github.io/post/comp141/f2_hu1c0b472ad7601c0ecbac2cb20f5ca62f_95942_9e17139c8b96e7d7978cd66ccf3b6ae2.webp&#34;
               width=&#34;600px&#34;
               height=&#34;507&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;22-create-a-shellscript-to-extract-data-from-catfactsjson-in-your-local-terminal&#34;&gt;2.2. Create a shellscript to extract data from &amp;ldquo;catfacts.json&amp;rdquo; in your local terminal.&lt;/h3&gt;
&lt;p&gt;In the next step, let&amp;rsquo;s create a shellscript to extract information from &amp;ldquo;catfacts.json&amp;rdquo;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@host: vi catfacts.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Let&amp;rsquo;s say we want to extract all the breeds stored in the file (type inside the &amp;ldquo;catfacts.sh&amp;rdquo; file):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# shellscript to gather all the breeds stored inside catfacts.json
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;grep &amp;#39;&amp;#34;breed&amp;#34;:&amp;#39; catfacts.json | uniq | sort
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After saving the shellscript file and quiting the file editor, make it executable with &amp;ldquo;chmod&amp;rdquo;
(on the terminal):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@host: chmod +x catfacts.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Execute the shellscript (on the terminal):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@host: ./catfacts.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The expected output is all the breeds stored within &amp;ldquo;catfacts.json&amp;rdquo;, without repetitions (uniq)
and alphabetically sorted (sort):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;breed&amp;#34;: &amp;#34;Abyssinian&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;breed&amp;#34;: &amp;#34;Aegean&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;breed&amp;#34;: &amp;#34;American Bobtail&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;breed&amp;#34;: &amp;#34;American Curl&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;breed&amp;#34;: &amp;#34;American Shorthair&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;breed&amp;#34;: &amp;#34;American Wirehair&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;breed&amp;#34;: &amp;#34;Arabian Mau&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;breed&amp;#34;: &amp;#34;Asian Semi-longhair&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;breed&amp;#34;: &amp;#34;Asian&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;breed&amp;#34;: &amp;#34;Australian Mist&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Provide a screenshot with the output above on your terminal as your answer to question 2.&lt;/p&gt;
&lt;h2 id=&#34;question-3&#34;&gt;Question 3&lt;/h2&gt;
&lt;p&gt;The steps below will give you some structure to answer this question.&lt;/p&gt;
&lt;h3 id=&#34;31-install-jq-in-your-local-system&#34;&gt;3.1. Install JQ in your local system.&lt;/h3&gt;
&lt;p&gt;To answer questions 3-6, install &lt;a href=&#34;https://stedolan.github.io/jq/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;JQ&lt;/a&gt; in your system.
For Linux users (your COMP 141 Virtual Machine is Linux):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@host: sudo apt install jq
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For macOS users:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@host% brew install jq
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;JQ (JSON Query) is a library of shellscript commands that makes it easy to extract information
from files in JSON format.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Test JQ on your machine:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@host% jq --version
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;32-create-a-json-file-with-folks-information&#34;&gt;3.2. Create a JSON file with folks&amp;rsquo; information.&lt;/h3&gt;
&lt;p&gt;Create &amp;ldquo;folks.json&amp;rdquo; using your local terminal:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@host% vi folks.json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here is the content you must add to &amp;ldquo;folks.json&amp;rdquo; (type inside the file):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   { &amp;#34;first&amp;#34;: &amp;#34;John&amp;#34;, &amp;#34;last&amp;#34;: &amp;#34;Doe&amp;#34;, &amp;#34;age&amp;#34;: 25 },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   { &amp;#34;first&amp;#34;: &amp;#34;Mary&amp;#34;, &amp;#34;last&amp;#34;: &amp;#34;Doe&amp;#34;, &amp;#34;age&amp;#34;: 24 },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   { &amp;#34;first&amp;#34;: &amp;#34;Jack&amp;#34;, &amp;#34;last&amp;#34;: &amp;#34;Jones&amp;#34;, &amp;#34;age&amp;#34;: 22 }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;]   
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;This JSON file stores data about three people, namely John, Mary, and Jack.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Make sure &amp;ldquo;folks.json&amp;rdquo; has the expected content:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@host% cat folks.json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;33-answer-question-3&#34;&gt;3.3. Answer question 3.&lt;/h3&gt;
&lt;p&gt;How would you extract a specific element from an array?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We&amp;rsquo;ve done this in question 2.
You can use grep or other commands written to a shellscript (&amp;quot;.sh&amp;quot; file).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To introduce JQ to you, here is an example of how you can extract the last names from &amp;ldquo;folks.json&amp;rdquo;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@host% jq &amp;#39;.[].last&amp;#39; folks.json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here is the expected output:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;Doe&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;Doe&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;Jones&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here is an example of how you can extract everybody whose last name is &amp;ldquo;Doe&amp;rdquo;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@host% jq &amp;#39;.[] | select(.last == &amp;#34;Doe&amp;#34;)&amp;#39; folks.json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The expected output is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;first&amp;#34;: &amp;#34;John&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;last&amp;#34;: &amp;#34;Doe&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;age&amp;#34;: 25
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;first&amp;#34;: &amp;#34;Mary&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;last&amp;#34;: &amp;#34;Doe&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;age&amp;#34;: 24
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And here is an example of how you can extract the age of the second person (the one at position &amp;ldquo;.[1]&amp;rdquo;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@host% jq &amp;#39;.[1].age&amp;#39; folks.json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;4-get-folks-with-age-equal-to-25&#34;&gt;4. Get folks with age equal to 25?&lt;/h2&gt;
&lt;p&gt;Here is the JQ command for that:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@host% jq &amp;#39;.[] | select(.age == 25)&amp;#39; folks.json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To make it a script, add the command above to a new file named &amp;ldquo;age25.sh&amp;rdquo;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@host% vi age25.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here is my screenshot saving this file with &amp;ldquo;vi&amp;rdquo;:
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/comp141/f3_hu581ad0ff28c95cfb4569e8cd89fd38f8_21974_fd69a2d46d4672567254c274117f1dc5.webp 400w,
               /post/comp141/f3_hu581ad0ff28c95cfb4569e8cd89fd38f8_21974_87c7d36f45a63c1d67a299215cc49eaa.webp 760w,
               /post/comp141/f3_hu581ad0ff28c95cfb4569e8cd89fd38f8_21974_1200x1200_fit_q90_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://danielmoreira.github.io/post/comp141/f3_hu581ad0ff28c95cfb4569e8cd89fd38f8_21974_fd69a2d46d4672567254c274117f1dc5.webp&#34;
               width=&#34;450px&#34;
               height=&#34;186&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Don&amp;rsquo;t forget to make the shellscript file executable before using it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@host% chmod +x age25.sh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@host% ./age25.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;The next two questions are very similar, so I&amp;rsquo;m providing only the JQ command.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;5-remove-keyvalue-pair&#34;&gt;5. Remove key/value pair?&lt;/h2&gt;
&lt;p&gt;The command below removes the first name from the &lt;strong&gt;first&lt;/strong&gt; person (position &amp;ldquo;.[0]&amp;rdquo;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@host% jq &amp;#39;del(.[0].first)&amp;#39; folks.json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;You can do the same thing for the last person, using &amp;ldquo;del(.[2].first)&amp;rdquo;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;6-get-sum-of-ages&#34;&gt;6. Get sum of ages?&lt;/h2&gt;
&lt;p&gt;The command below sums up all the ages in the JSON file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@host% jq &amp;#39;.[0].age+.[1].age+.[2].age&amp;#39; folks.json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;Observe that &amp;ldquo;.[0]&amp;rdquo; refers to the 1st person, while &amp;ldquo;.[1]&amp;rdquo; refers to the 2nd, and &amp;ldquo;.[2]&amp;rdquo;
refers to the 3rd and last.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;following-questions&#34;&gt;Following Questions&lt;/h2&gt;
&lt;p&gt;Questions 7-11 are more straightforward, but may you have any issues, let me know.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Better Society</title>
      <link>https://danielmoreira.github.io/post/bettersoc/</link>
      <pubDate>Thu, 13 Jun 2019 00:00:00 +0000</pubDate>
      <guid>https://danielmoreira.github.io/post/bettersoc/</guid>
      <description>&lt;p&gt;One of the things I worry about while doing my research is how to drive it towards building a better society.
Although the concept of a &lt;em&gt;better society&lt;/em&gt; may differ from one culture to the other, I believe any society gets better whenever &lt;strong&gt;all&lt;/strong&gt; of its members experience more &lt;strong&gt;freedom&lt;/strong&gt; to enjoy their &lt;strong&gt;rights&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Among the untold manners technology can be used to breach people&amp;rsquo;s rights, five flaws in the way we are doing informatics get my attention.
Devices and programs usually suffer from (1) lack of &lt;strong&gt;safety&lt;/strong&gt;, (2) lack of &lt;strong&gt;trustworthiness&lt;/strong&gt;, (3) lack of &lt;strong&gt;privacy&lt;/strong&gt;, (4) ignorance of &lt;strong&gt;diversity&lt;/strong&gt;, and (5) lack of &lt;strong&gt;accountability&lt;/strong&gt;.
Not unintentionally, the &lt;a href=&#34;https://danielmoreira.github.io/#projects&#34;&gt;projects&lt;/a&gt; I&amp;rsquo;ve been contributing to in the past few years tackle one or more of these issues.&lt;/p&gt;
&lt;h2 id=&#34;safety&#34;&gt;Safety&lt;/h2&gt;
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;a href=&#34;https://commons.wikimedia.org/wiki/File:Interest.jpg&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/bettersoc/safety_hu5c2b1449ce7cfaa94c29be8156bee6a5_11232_fbae809a6170f9b729999975a1475396.webp 400w,
               /post/bettersoc/safety_hu5c2b1449ce7cfaa94c29be8156bee6a5_11232_308a5d4494688f90a42c65dd4a5a983e.webp 760w,
               /post/bettersoc/safety_hu5c2b1449ce7cfaa94c29be8156bee6a5_11232_1200x1200_fit_q90_h2_lanczos.webp 1200w&#34;
               src=&#34;https://danielmoreira.github.io/post/bettersoc/safety_hu5c2b1449ce7cfaa94c29be8156bee6a5_11232_fbae809a6170f9b729999975a1475396.webp&#34;
               width=&#34;300px&#34;
               height=&#34;224&#34;
               loading=&#34;lazy&#34; /&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;From the many ways safety can be harmed by technology, the improper dissemination of sensitive content (such as pornography or violence), to inadequate audiences (such as kids or unwary spectators), gained my attention while I was developing my PhD, under the supervision of prof. &lt;a href=&#34;https://www.ic.unicamp.br/~rocha/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Anderson Rocha&lt;/a&gt; (who generously proposed the topic).&lt;/p&gt;
&lt;p&gt;With the popularity and pervasiveness of online video streams, sensitive scenes depicting &lt;a href=&#34;https://www.washingtonpost.com/news/the-intersect/wp/2017/01/15/a-12-year-old-girl-live-streamed-her-suicide-it-took-two-weeks-for-facebook-to-take-the-video-down/?utm_term=.ea8124e4a0e9&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;suicide&lt;/a&gt;, &lt;a href=&#34;https://www.cnn.com/videos/us/2016/06/17/man-shot-killed-while-live-streaming-orig-vstan-dlewis.cnn&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;murder&lt;/a&gt;, and even &lt;a href=&#34;https://www.nytimes.com/2016/04/19/us/periscope-rape-case-columbus-ohio-video-livestreaming.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;rape&lt;/a&gt; have been broadcasted on the Internet, raising questions about the safety of these services.
Aware of this situation, &lt;a href=&#34;https://www.samsung.com/br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Samsung&lt;/a&gt; has funded us to focus on the development of solutions to detect sensitive video.
Rather than aiming at denouncing or morally condemning the lawful consumers of certain types of sensitive content, our intent has always been to support the implementation of filtering and warning features that would make player systems safer (especially in the case of child spectators).&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve had the chance to tackle the lack of safety in video streaming systems through the &lt;a href=&#34;https://danielmoreira.github.io/project/sma/&#34;&gt;SMA&lt;/a&gt; project.&lt;/p&gt;
&lt;h2 id=&#34;trustworthiness&#34;&gt;Trustworthiness&lt;/h2&gt;
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/bettersoc/trust_huc712311a1d7a57cd829d8a884be503f8_25148_c6c997cbfa676e89c3517303e2af96ef.webp 400w,
               /post/bettersoc/trust_huc712311a1d7a57cd829d8a884be503f8_25148_1a73b19b20e8e30e57956efe92ee6044.webp 760w,
               /post/bettersoc/trust_huc712311a1d7a57cd829d8a884be503f8_25148_1200x1200_fit_q90_h2_lanczos.webp 1200w&#34;
               src=&#34;https://danielmoreira.github.io/post/bettersoc/trust_huc712311a1d7a57cd829d8a884be503f8_25148_c6c997cbfa676e89c3517303e2af96ef.webp&#34;
               width=&#34;300px&#34;
               height=&#34;333&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;In the era of misinformation and &lt;em&gt;fake news&lt;/em&gt;, there is a symptomatic undermining of trust not only in textual but also in visual information.
People are conscious of the existence of image editing software (e.g., &lt;em&gt;Photoshop&lt;/em&gt;), with which even unskilled users can easily fabricate and manipulate pictures.
Although many of these manipulations have benign purposes (no, there is nothing wrong with &lt;em&gt;your memes&lt;/em&gt;), some contents are generated with malicious intents, such as general public deception and propaganda.&lt;/p&gt;
&lt;p&gt;The lack of available solutions to assess the integrity of images and videos allows adversarial manipulated data to have a negative impact on the way people relate to each other on the Internet.
They don&amp;rsquo;t know what to believe or whom to trust anymore.
In addition, fraudulent images represent a challenge even for the &lt;a href=&#34;https://www.nature.com/articles/s41419-018-0430-3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;scientific community&lt;/a&gt;.
Aware of this scenario, &lt;a href=&#34;https://www.darpa.mil/program/media-forensics&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DARPA&lt;/a&gt; has been funding us, at &lt;a href=&#34;https://cvrl.nd.edu/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CVRL&lt;/a&gt;, to conduct research on the development of tools to verify the integrity of digital images.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m having the chance to tackle the lack of trustworthiness in visual media systems through the &lt;a href=&#34;https://danielmoreira.github.io/project/medifor/&#34;&gt;MediFor&lt;/a&gt; and &lt;a href=&#34;https://danielmoreira.github.io/project/sciint/&#34;&gt;Sci-Int&lt;/a&gt; projects.&lt;/p&gt;
&lt;h2 id=&#34;privacy-and-diversity&#34;&gt;Privacy and Diversity&lt;/h2&gt;
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34;
           src=&#34;https://danielmoreira.github.io/post/bettersoc/privacy.gif&#34;
           loading=&#34;lazy&#34; data-zoomable width=&#34;300px&#34; /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;With the advent of deep learning and the necessity for large datasets, &lt;em&gt;visual data collection&lt;/em&gt; has become an important step of Computer Vision and Machine Learning research.
Due to the popularity of image and video capture devices (such as digital cameras, smartphones, dash cams, etc.), large datasets can now be quickly generated.
Nevertheless, a major question that stands out in such a process is how to protect the privacy of people who are eventually being recorded.
Imagine, for example, a dash cam that is collecting road data for a self-driving car project.
In a major city, plenty of people will certainly be captured in the footages, and it is very unlikely that one will be able to obtain image rights for each individual.&lt;/p&gt;
&lt;p&gt;Interested in such issue, we, at &lt;a href=&#34;https://cvrl.nd.edu/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CVRL&lt;/a&gt;, investigate the generation of realistic synthetic faces, whose identities do not belong to a real existing person, hence avoiding privacy breaches.
The idea is to de-identify the recorded individuals, by replacing their faces with synthetic assets.&lt;/p&gt;
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;a href=&#34;https://www.youtube.com/watch?v=t4DT3tQqgRM&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img alt=&#34;&#34;
           src=&#34;https://danielmoreira.github.io/post/bettersoc/diversity.gif&#34;
           loading=&#34;lazy&#34; width=&#34;300px&#34; /&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;In addition, collected data may be biased, due to a lack of diversity in the captured individuals.
Consider, for instance, training video footages collected in China.
It is very &lt;a href=&#34;https://www.nationalgeographic.com/travel/destinations/asia/china/black-tourist-china/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;unlikely&lt;/a&gt; that black people will be represented in such a dataset.&lt;/p&gt;
&lt;p&gt;Limitations of this nature comprise what I call &lt;em&gt;ignorance of diversity&lt;/em&gt; and are the potential cause of many &lt;a href=&#34;http://www.cnn.com/2009/TECH/12/22/hp.webcams/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;technological failures&lt;/a&gt; in the presence of underrepresented groups.
Unfortunately, glitches like these may go &lt;a href=&#34;https://www.forbes.com/sites/mzhang/2015/07/01/google-photos-tags-two-african-americans-as-gorillas-through-facial-recognition-software/#41ebc8e8713d&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;beyond the technological aspects&lt;/a&gt; and prejudice the rights of equality in face of diversity.
To cope with this problem, similar to the privacy protection strategy, synthetic identities can be used to diversify the recorded individuals by performing face replacement, providing controlled variation of not only ethnicity but also of age and of gender.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m having the chance to tackle the lack of privacy and ignorance of diversity in image and video datasets through the &lt;a href=&#34;https://danielmoreira.github.io/project/srefv/&#34;&gt;SREFV&lt;/a&gt; project.&lt;/p&gt;
&lt;h2 id=&#34;accountability&#34;&gt;Accountability&lt;/h2&gt;
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34;
           src=&#34;https://danielmoreira.github.io/post/bettersoc/acc.gif&#34;
           loading=&#34;lazy&#34; data-zoomable width=&#34;300px&#34; /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;People have the right to understand in details the decisions made about them by algorithms belonging to either government or industry.
This is fundamental to give them the possibility of questioning determinations and defending against resolutions that might be the outcome of incorrect, rigged, or even &lt;a href=&#34;https://www.youtube.com/watch?v=rga2-d1oi30&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bogus&lt;/a&gt; computations.
In this context, &lt;em&gt;accountability&lt;/em&gt; becomes a relevant concept, since it comprises the property of an automated decision system to be fair, transparent, and explainable to human beings.
As a consequence, the more accountable a system is, the more audit power it gives to people.&lt;/p&gt;
&lt;p&gt;Within the field of Biometrics, traditional iris recognition solutions are well known for constituting very reliable methods of identity verification.
Nevertheless, since they are not human-friendly enough to convince people who do not possess image processing expertise, their usage before a jury in courts of law is usually avoided.
Aware of this limitation, Prof. &lt;a href=&#34;https://engineering.nd.edu/profiles/aczajka&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Adam Czajka&lt;/a&gt; has started at &lt;a href=&#34;https://cvrl.nd.edu/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CVRL&lt;/a&gt; the investigation of human-intelligible iris matching strategies.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m having the chance to tackle the lack of accountability in iris recognition algorithms through the &lt;a href=&#34;https://danielmoreira.github.io/project/tshepii/&#34;&gt;TSHEPII&lt;/a&gt; project.&lt;/p&gt;
&lt;h2 id=&#34;keep-pushing&#34;&gt;Keep pushing&lt;/h2&gt;
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;a href=&#34;http://matt.might.net/articles/phd-school-in-pictures/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/bettersoc/conclusion_hu616153b9ba853b08cfcb0b17a764e62a_15659_e23e16d19519778674ab513c11e045a2.webp 400w,
               /post/bettersoc/conclusion_hu616153b9ba853b08cfcb0b17a764e62a_15659_854e5ff6e773e415988e6dcb79881f6d.webp 760w,
               /post/bettersoc/conclusion_hu616153b9ba853b08cfcb0b17a764e62a_15659_1200x1200_fit_q90_h2_lanczos.webp 1200w&#34;
               src=&#34;https://danielmoreira.github.io/post/bettersoc/conclusion_hu616153b9ba853b08cfcb0b17a764e62a_15659_e23e16d19519778674ab513c11e045a2.webp&#34;
               width=&#34;600px&#34;
               height=&#34;251&#34;
               loading=&#34;lazy&#34; /&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;Although the aforementioned efforts may seem minuscule in face of the size of the challenge of building a better society, I try to calm myself down by making a parallel to the &lt;a href=&#34;http://matt.might.net/articles/phd-school-in-pictures/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;explanation&lt;/a&gt; of Prof. Matt Might on how the human knowledge increases with the progress of scientific research.
As he advises, &lt;em&gt;I keep pushing&lt;/em&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
